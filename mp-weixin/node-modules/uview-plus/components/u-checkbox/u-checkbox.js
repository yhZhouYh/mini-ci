'use strict'; const e = require('../../../../common/vendor.js')

const t = { name: 'u-checkbox', mixins: [e.mpMixin, e.mixin, e.props$9], data: () => ({ isChecked: !1, parentData: { iconSize: 12, labelDisabled: null, disabled: null, shape: 'square', activeColor: null, inactiveColor: null, size: 18, modelValue: null, iconColor: null, placement: 'row', borderBottom: !1, iconPlacement: 'left' } }), computed: { elDisabled() { return this.disabled !== '' ? this.disabled : this.parentData.disabled !== null && this.parentData.disabled }, elLabelDisabled() { return this.labelDisabled !== '' ? this.labelDisabled : this.parentData.labelDisabled !== null && this.parentData.labelDisabled }, elSize() { return this.size ? this.size : this.parentData.size ? this.parentData.size : 21 }, elIconSize() { return this.iconSize ? this.iconSize : this.parentData.iconSize ? this.parentData.iconSize : 12 }, elActiveColor() { return this.activeColor ? this.activeColor : this.parentData.activeColor ? this.parentData.activeColor : '#2979ff' }, elInactiveColor() { return this.inactiveColor ? this.inactiveColor : this.parentData.inactiveColor ? this.parentData.inactiveColor : '#c8c9cc' }, elLabelColor() { return this.labelColor ? this.labelColor : this.parentData.labelColor ? this.parentData.labelColor : '#606266' }, elShape() { return this.shape ? this.shape : this.parentData.shape ? this.parentData.shape : 'circle' }, elLabelSize() { return e.index.$u.addUnit(this.labelSize ? this.labelSize : this.parentData.labelSize ? this.parentData.labelSize : '15') }, elIconColor() { const e = this.iconColor ? this.iconColor : this.parentData.iconColor ? this.parentData.iconColor : '#ffffff'; return this.elDisabled ? this.isChecked ? this.elInactiveColor : 'transparent' : this.isChecked ? e : 'transparent' }, iconClasses() { const e = []; return e.push(`u-checkbox__icon-wrap--${this.elShape}`), this.elDisabled && e.push('u-checkbox__icon-wrap--disabled'), this.isChecked && this.elDisabled && e.push('u-checkbox__icon-wrap--disabled--checked'), e }, iconWrapStyle() { const t = {}; return t.backgroundColor = this.isChecked && !this.elDisabled ? this.elActiveColor : '#ffffff', t.borderColor = this.isChecked && !this.elDisabled ? this.elActiveColor : this.elInactiveColor, t.width = e.index.$u.addUnit(this.elSize), t.height = e.index.$u.addUnit(this.elSize), this.parentData.iconPlacement === 'right' && (t.marginRight = 0), t }, checkboxStyle() { const t = {}; return this.parentData.borderBottom && this.parentData.placement === 'row' && e.index.$u.error('检测到您将borderBottom设置为true，需要同时将u-checkbox-group的placement设置为column才有效'), this.parentData.borderBottom && this.parentData.placement === 'column' && (t.paddingBottom = '8px'), e.index.$u.deepMerge(t, e.index.$u.addStyle(this.customStyle)) } }, mounted() { this.init() }, methods: { init() { this.updateParentData(), this.parent || e.index.$u.error('u-checkbox必须搭配u-checkbox-group组件使用'); const t = this.parentData.modelValue; this.checked ? this.isChecked = !0 : e.index.$u.test.array(t) && (this.isChecked = t.includes((this.name))) }, updateParentData() { this.getParentData('u-checkbox-group') }, wrapperClickHandler(e) { this.parentData.iconPlacement === 'right' && this.iconClickHandler(e) }, iconClickHandler(e) { this.preventEvent(e), this.elDisabled || this.setRadioCheckedStatus() }, labelClickHandler(e) { this.preventEvent(e), this.elLabelDisabled || this.elDisabled || this.setRadioCheckedStatus() }, emitEvent() { this.$emit('change', this.isChecked), this.$nextTick((() => { e.index.$u.formValidate(this, 'change') })) }, setRadioCheckedStatus() { this.isChecked = !this.isChecked, this.emitEvent(), typeof this.parent.unCheckedOther == 'function' && this.parent.unCheckedOther(this) } }, watch: { checked() { this.isChecked = this.checked } } }

if (!Array) { e.resolveComponent('u-icon')() }Math; const i = e._export_sfc(t, [['render', function (t, i, a, l, n, s) { return { a: e.p({ name: 'checkbox-mark', size: s.elIconSize, color: s.elIconColor }), b: e.o(((...e) => s.iconClickHandler && s.iconClickHandler(...e))), c: e.n(s.iconClasses), d: e.s(s.iconWrapStyle), e: e.t(t.label), f: e.o(((...e) => s.labelClickHandler && s.labelClickHandler(...e))), g: s.elDisabled ? s.elInactiveColor : s.elLabelColor, h: s.elLabelSize, i: s.elLabelSize, j: e.s(s.checkboxStyle), k: e.o(((...e) => s.wrapperClickHandler && s.wrapperClickHandler(...e))), l: e.n(`u-checkbox-label--${n.parentData.iconPlacement}`), m: e.n(n.parentData.borderBottom && n.parentData.placement === 'column' && 'u-border-bottom') } }], ['__scopeId', 'data-v-fb07f37a']]); wx.createComponent(i)
