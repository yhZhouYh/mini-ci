'use strict'; const e = require('../../../../common/vendor.js')

const t = { name: 'u-tabbar', mixins: [e.mpMixin, e.mixin, e.props$6], data: () => ({ placeholderHeight: 0 }), computed: { tabbarStyle() { const t = { zIndex: this.zIndex }; return e.index.$u.deepMerge(t, e.index.$u.addStyle(this.customStyle)) }, updateChild() { return [this.value, this.activeColor, this.inactiveColor] }, updatePlaceholder() { return [this.fixed, this.placeholder] } }, watch: { updateChild() { this.updateChildren() }, updatePlaceholder() { this.setPlaceholderHeight() } }, created() { this.children = [] }, mounted() { this.setPlaceholderHeight() }, methods: { updateChildren() { this.children.length && this.children.map((e => e.updateFromParent())) }, async setPlaceholderHeight() { this.fixed && this.placeholder && (await e.index.$u.sleep(20), this.$uGetRect('.u-tabbar__content').then((({ height: e = 50 }) => { this.placeholderHeight = e }))) } } }

if (!Array) { e.resolveComponent('u-safe-bottom')() }Math; const a = e._export_sfc(t, [['render', function (t, a, r, i, o, d) { return e.e({ a: t.safeAreaInsetBottom }, (t.safeAreaInsetBottom, {}), { b: e.o(((...e) => t.noop && t.noop(...e))), c: e.n(t.border && 'u-border-top'), d: e.n(t.fixed && 'u-tabbar--fixed'), e: e.s(d.tabbarStyle), f: t.placeholder }, t.placeholder ? { g: `${o.placeholderHeight}px` } : {}) }], ['__scopeId', 'data-v-b564ac71']]); wx.createComponent(a)
